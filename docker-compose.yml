#version: '3.8'

services:
  mysql:
    image: mysql:latest
    container_name: my-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ab147890
      MYSQL_DATABASE: vnollx
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: my-redis
    networks:
      - app-network

  vnollx-api:
    #docker tag vnollx-api:latest vnollx/vnollx-api:latest
    image: 'vnollx/vnollx-api:latest'
    volumes:
      - type: bind
        source: ./config
        target: /app/config
    ports:
      - 8880:8880
    depends_on:
      - mysql
      - redis
      #- zookeeper
      - etcd
      #- kafka
    networks:
      - app-network

  vnollx-user:
    image: 'vnollx/vnollx-user:latest'
    environment:
      - ETCD_PASSWORD=ab147890
    volumes:
      - type: bind
        source: ./config
        target: /app/config
    ports:
      - 8881:8881
    depends_on:
      - vnollx-api
      - mysql
      - redis
      #- zookeeper
      - etcd
      #- kafka
    networks:
      - app-network

  vnollx-file:
    image: 'vnollx/vnollx-file:latest'
    environment:
      - ETCD_PASSWORD=ab147890
    volumes:
      - type: bind
        source: ./config
        target: /app/config
    ports:
      - 8882:8882
    depends_on:
      - vnollx-api
      - mysql
      - redis
      #- zookeeper
      - etcd
      #- kafka
    networks:
      - app-network

  vnollx-folder:
    image: 'vnollx/vnollx-folder:latest'
    environment:
      - ETCD_PASSWORD=ab147890
    volumes:
      - type: bind
        source: ./config
        target: /app/config
    ports:
      - 8883:8883
    depends_on:
      - vnollx-api
      - mysql
      - redis
      #- zookeeper
      - etcd
      #- kafka
    networks:
      - app-network

  vnollx-notification:
    image: 'vnollx/vnollx-notification:latest'
    environment:
      - ETCD_PASSWORD=ab147890
    volumes:
      - type: bind
        source: ./config
        target: /app/config
    ports:
      - 8884:8884
    depends_on:
      - vnollx-api
      - mysql
      - redis
      #- zookeeper
      - etcd
      #- kafka
    networks:
      - app-network

  etcd:
    image: 'bitnami/etcd:latest'
    container_name: my-etcd
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - 2379:2379
      - 2380:2380
    networks:
      - app-network

  #kafka:
    #image: 'bitnami/kafka:latest'
    #container_name: my-kafka
    #ports:
      #- '9094:9092'
    #environment:
      #- KAFKA_CFG_NODE_ID=0
      #- KAFKA_CFG_PROCESS_ROLES=controller,broker
      #- KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      #- KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      #- KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,EXTERNAL://172.30.48.1:9093
      #- KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      #- KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    #volumes:
      #- ./kafka_data:/var/lib/kafka/data
    #networks:
      #- app-network

  minio:
    image: bitnami/minio:latest
    container_name: my-minio
    environment:
      MINIO_ACCESS_KEY: vnollx           # 设置 MinIO 访问密钥
      MINIO_SECRET_KEY: Iamvnollx        # 设置 MinIO 秘密密钥
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"                             # 映射 MinIO 服务端口
      - "9001:9001"                             # 映射 MinIO 控制台端口
    volumes:
      - minio-data:/data
    networks:
      - app-network

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    ports:
      - '80:80' # 用于 HTTP
      - '443:443' # 用于 HTTPS
      - '81:81' # 用于管理界面
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    networks:
      - app-network

volumes:
  mysql_data:
    driver: local
  consul-data:
    driver: local
  #kafka_data:
    #driver: local
  minio-data:
    driver: local

networks:
  app-network:
    driver: bridge
    